version: '3.8'

services:
  redis:
    image: redis:7.2.4
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 20s
      retries: 5
      timeout: 5s

  postgres:
    image: postgres:15.4
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow"]
      interval: 10s
      retries: 5
      timeout: 5s

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql-db-volume:/var/lib/mysql
      - ./store_files:/var/lib/mysql-files
      - ./mysql.cnf:/etc/mysql/conf.d/mysql.cnf
    ports:
      - "3306:3306"
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-uroot", "-proot"]
      interval: 10s
      retries: 5
      timeout: 5s

  airflow-init:
    build: .
    container_name: airflow-init
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
    command: ["airflow", "db", "init"]

  airflow-create-user:
    build: .
    container_name: airflow-create-user
    depends_on:
      airflow-init:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
    command: >
      airflow users create
      --username admin
      --password admin
      --firstname Admin
      --lastname User
      --role Admin
      --email admin@example.com
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./store_files:/opt/airflow/store_files
      - ./sql_files:/opt/airflow/sql_file
      - ./credentials:/opt/airflow/credentials
      - ./python_import_files:/opt/airflow/python_import_files
      - ./apache_beam_pipeline:/opt/airflow/apache_beam_pipeline
      - ./pyspark_files:/opt/airflow/pyspark_files

  airflow-webserver:
    build: .
    container_name: airflow-webserver
    restart: always
    depends_on:
      airflow-create-user:
        condition: service_completed_successfully
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
      # - AIRFLOW__SMTP__SMTP_HOST=smtp4dev
      # - AIRFLOW__SMTP__SMTP_PORT=25
      # - AIRFLOW__SMTP__SMTP_MAIL_FROM=airflow@airflow.com
      # - AIRFLOW__SMTP__SMTP_USER=
      # - AIRFLOW__SMTP__SMTP_PASSWORD=
      # - AIRFLOW__SMTP__SMTP_STARTTLS=False
      # - AIRFLOW__SMTP__SMTP_SSL=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./store_files:/opt/airflow/store_files
      - ./sql_files:/opt/airflow/sql_files
      - ./credentials:/opt/airflow/credentials
      - ./python_import_files:/opt/airflow/python_import_files
      - ./apache_beam_pipeline:/opt/airflow/apache_beam_pipeline
      - ./pyspark_files:/opt/airflow/pyspark_files
    ports:
      - "8080:8080"
    command: webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "5"

  airflow-scheduler:
    build: .
    container_name: airflow-scheduler
    restart: always
    depends_on:
      airflow-webserver:
        condition: service_healthy
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__LOAD_EXAMPLES=false
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
      # - AIRFLOW__SMTP__SMTP_HOST=smtp4dev
      # - AIRFLOW__SMTP__SMTP_PORT=25
      # - AIRFLOW__SMTP__SMTP_MAIL_FROM=airflow@airflow.com
      # - AIRFLOW__SMTP__SMTP_USER=
      # - AIRFLOW__SMTP__SMTP_PASSWORD=
      # - AIRFLOW__SMTP__SMTP_STARTTLS=False
      # - AIRFLOW__SMTP__SMTP_SSL=False
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./store_files:/opt/airflow/store_files
      - ./sql_files:/opt/airflow/sql_files
      - ./credentials:/opt/airflow/credentials
      - ./python_import_files:/opt/airflow/python_import_files
      - ./apache_beam_pipeline:/opt/airflow/apache_beam_pipeline
      - ./pyspark_files:/opt/airflow/pyspark_files
    command: scheduler
    logging:
      driver: json-file
      options:
        max-size: "100m"
        max-file: "5"
  airflow-worker:
    build: .
    container_name: airflow-worker
    restart: always
    depends_on:
      - redis
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=CeleryExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CELERY__BROKER_URL=redis://redis:6379/0
      - AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres:5432/airflow
      - AIRFLOW_CONN_MYSQL_DEFAULT=mysql://root:root@mysql:3306/mysql

    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./store_files:/opt/airflow/store_files
      - ./sql_files:/opt/airflow/sql_files
      - ./credentials:/opt/airflow/credentials
      - ./python_import_files:/opt/airflow/python_import_files
      - ./apache_beam_pipeline:/opt/airflow/apache_beam_pipeline
      - ./pyspark_files:/opt/airflow/pyspark_files
    command: celery worker


volumes:
  postgres-db-volume:
  mysql-db-volume:
